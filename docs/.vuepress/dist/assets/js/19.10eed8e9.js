(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{253:function(a,t,e){"use strict";e.r(t);var s=e(0),n=Object(s.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"webpack"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#webpack"}},[a._v("#")]),a._v(" Webpack")]),a._v(" "),e("h2",{attrs:{id:"实践学习"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实践学习"}},[a._v("#")]),a._v(" 实践学习")]),a._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://juejin.im/post/5e46e1206fb9a07cbe345dac",target:"_blank",rel:"noopener noreferrer"}},[a._v("Webpack4 基础入门与实践"),e("OutboundLink")],1)]),a._v(" "),e("li",[e("a",{attrs:{href:"https://juejin.im/post/5e5420e8e51d4526ea7ef35e",target:"_blank",rel:"noopener noreferrer"}},[a._v("Webpack4 进阶与实践"),e("OutboundLink")],1)]),a._v(" "),e("li",[e("a",{attrs:{href:"https://juejin.cn/post/6844904094281236487#heading-19",target:"_blank",rel:"noopener noreferrer"}},[a._v("吐血整理-再来一打Webpack面试题"),e("OutboundLink")],1)])]),a._v(" "),e("h2",{attrs:{id:"loader-与-plugin"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#loader-与-plugin"}},[a._v("#")]),a._v(" Loader 与 Plugin")]),a._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",[e("strong",[a._v("Loader(加载器)")]),a._v("。Webpack 将一切文件视为模块，但是 webpack 原生是只能解析 js 文件，如果想将其他文件也打包的话，就会用到"),e("code",[a._v("loader")]),a._v("(来当翻译官，对其他类型的资源进行转译的预处理工作)。 所以 "),e("strong",[a._v("Loader 的作用是让 webpack 拥有了加载和解析非 JavaScript 文件的能力。")]),a._v("(本质就是一个函数，在该函数中对接收到的内容进行转换，返回转换后的结果。)")])]),a._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",[e("strong",[a._v("Plugin(插件)")]),a._v("。"),e("strong",[a._v("Plugin 可以扩展 webpack 的功能，让 webpack 具有更多的灵活性")]),a._v("。 (基于事件流框架 "),e("code",[a._v("Tapable")]),a._v(")在 Webpack 运行的生命周期中会广播出许多事件，Plugin 可以监听这些事件，在合适的时机通过 Webpack 提供的 API 改变输出结果。")])]),a._v(" "),e("p",[e("strong",[a._v("两者除了概念不同具体用法也不同：")]),a._v(" 🌟")]),a._v(" "),e("ul",[e("li",[e("strong",[a._v("Loader")]),a._v("在"),e("code",[a._v("module.rules")]),a._v("中配置，也就是说他作为模块的解析规则而存在。 类型为数组，每一项都是一个"),e("code",[a._v("Object")]),a._v("，里面描述了对于什么类型的文件（"),e("code",[a._v("test")]),a._v("），使用什么加载 ("),e("code",[a._v("loader")]),a._v(") 和使用的参数（"),e("code",[a._v("options")]),a._v("）")]),a._v(" "),e("li",[e("strong",[a._v("Plugin")]),a._v("在"),e("code",[a._v("plugins")]),a._v("中单独配置。 类型为数组，每一项是一个"),e("code",[a._v("plugin")]),a._v("的实例，参数都通过构造函数传入。")])]),a._v(" "),e("p",[e("strong",[a._v("常用 Loader：")])]),a._v(" "),e("ul",[e("li",[a._v("file-loader：把文件输出到一个文件夹中，在代码中通过相对 URL 去引用输出的文件")]),a._v(" "),e("li",[a._v("url-loader：和 file-loader 类似，区别是用户可以设置一个阈值，大于阈值会交给 file-loader 处理，小于阈值时返回文件 base64 形式编码 (处理图片和字体)，并把文件内容注入到代码中去")]),a._v(" "),e("li",[a._v("source-map-loader：加载额外的 Source Map 文件，以方便断点调试")]),a._v(" "),e("li",[a._v("image-loader：加载并且压缩图片文件")]),a._v(" "),e("li",[a._v("babel-loader：把 ES6 转换成 ES5")]),a._v(" "),e("li",[a._v("css-loader：加载 CSS，支持模块化、压缩、文件导入等特性")]),a._v(" "),e("li",[a._v("style-loader：把 CSS 代码注入到 JavaScript 中，通过 DOM 操作去加载 CSS。")]),a._v(" "),e("li",[a._v("eslint-loader：通过 ESLint 检查 JavaScript 代码")])]),a._v(" "),e("p",[e("strong",[a._v("是否写过 Loader? 简单描述下编写 loader 的思路？")])]),a._v(" "),e("p",[a._v("Loader 支持链式调用，所以开发上需要严格遵循“单一职责”，每个 Loader 只负责自己需要负责的事情。")]),a._v(" "),e("p",[e("a",{attrs:{href:"https://www.webpackjs.com/api/loaders/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Loader的API"),e("OutboundLink")],1)]),a._v(" "),e("ul",[e("li",[a._v("Loader 运行在 Node.js 中，我们可以调用任意 Node.js 自带的 API 或者安装第三方模块进行调用")]),a._v(" "),e("li",[a._v("Webpack 传给 Loader 的原内容都是 UTF-8 格式编码的字符串，当某些场景下 Loader 处理二进制文件时，需要通过 exports.raw = true 告诉 Webpack 该 Loader 是否需要二进制数据")]),a._v(" "),e("li",[a._v("尽可能的异步化 Loader，如果计算量很小，同步也可以")]),a._v(" "),e("li",[a._v("Loader 是无状态的，我们不应该在 Loader 中保留状态")]),a._v(" "),e("li",[a._v("使用 loader-utils 和 schema-utils 为我们提供的实用工具")]),a._v(" "),e("li",[a._v("加载本地 Loader 方法\n"),e("ol",[e("li",[a._v("Npm link")]),a._v(" "),e("li",[a._v("ResolveLoader")])])])]),a._v(" "),e("p",[e("strong",[a._v("面试题：在实际工程中，配置文件上百行乃是常事，如何保证各个loader按照预想方式工作？")])]),a._v(" "),e("p",[a._v("可以使用 "),e("code",[a._v("enforce")]),a._v(" 强制执行 "),e("code",[a._v("loader")]),a._v(" 的作用顺序，"),e("code",[a._v("pre")]),a._v(" 代表在所有正常 loader 之前执行，"),e("code",[a._v("post")]),a._v(" 是所有 loader 之后执行。(inline 官方不推荐使用)")]),a._v(" "),e("p",[e("strong",[a._v("常用 Plugin：")])]),a._v(" "),e("ul",[e("li",[a._v("define-plugin：定义环境变量")]),a._v(" "),e("li",[a._v("html-webpack-plugin：简化 html 文件创建(依赖于 html-loader)")]),a._v(" "),e("li",[a._v("web-webpack-plugin: 可方便地为单页应用输出 HTML，比 html-webpack-plugin 好用")]),a._v(" "),e("li",[a._v("uglifyjs-webpack-plugin：通过"),e("code",[a._v("UglifyES")]),a._v("压缩"),e("code",[a._v("ES6")]),a._v("代码")]),a._v(" "),e("li",[a._v("webpack-parallel-uglify-plugin: 多进程执行代码压缩，提升构建速度")]),a._v(" "),e("li",[a._v("webpack-bundle-analyzer: 可视化 webpack 输出文件的体积")]),a._v(" "),e("li",[a._v("mini-css-extract-plugin: 分离样式文件，CSS 提取为独立文件，支持按需加载 (替代extract-text-webpack-plugin)")]),a._v(" "),e("li",[a._v("webpack-bundle-analyzer: 可视化 Webpack 输出文件的体积 (业务组件、依赖第三方模块)")])]),a._v(" "),e("p",[e("strong",[a._v("是否写过 Plugin？简单描述下编写 Plugin 的思路？")])]),a._v(" "),e("p",[a._v("webpack在运行的生命周期中会广播出许多事件，Plugin 可以监听这些事件，在特定的阶段钩入想要添加的自定义功能。Webpack 的 Tapable 事件流机制保证了插件的有序性，使得整个系统扩展性良好。")]),a._v(" "),e("p",[e("a",{attrs:{href:"https://www.webpackjs.com/api/plugins/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Plugin的API"),e("OutboundLink")],1)]),a._v(" "),e("ul",[e("li",[a._v("compiler 暴露了和 Webpack 整个生命周期相关的钩子")]),a._v(" "),e("li",[a._v("compilation 暴露了与模块和依赖有关的粒度更小的事件钩子")]),a._v(" "),e("li",[a._v("插件需要在其原型上绑定apply方法，才能访问 compiler 实例")]),a._v(" "),e("li",[a._v("传给每个插件的 compiler 和 compilation对象都是同一个引用，若在一个插件中修改了它们身上的属性，会影响后面的插件")]),a._v(" "),e("li",[a._v("找出合适的事件点去完成想要的功能\n"),e("ul",[e("li",[a._v("emit 事件发生时，可以读取到最终输出的资源、代码块、模块及其依赖，并进行修改(emit 事件是修改 Webpack 输出资源的最后时机)")]),a._v(" "),e("li",[a._v("watch-run 当依赖的文件发生变化时会触发")])])]),a._v(" "),e("li",[a._v("异步的事件需要在插件处理完任务时调用回调函数通知 Webpack 进入下一个流程，不然会卡住")])]),a._v(" "),e("p",[e("strong",[a._v("面试题：使用webpack开发时，你用过哪些可以提高效率的插件？")]),a._v(" 🌟")]),a._v(" "),e("ul",[e("li",[e("code",[a._v("webpack-dashboard")]),a._v("：可以更友好的展示相关打包信息。")]),a._v(" "),e("li",[e("code",[a._v("webpack-merge")]),a._v("：提取公共配置，减少重复配置代码。")]),a._v(" "),e("li",[e("code",[a._v("speed-measure-webpack-plugin")]),a._v("：简称 SMP，分析出 Webpack 打包过程中 Loader 和 Plugin 的耗时，有助于找到构建过程中的性能瓶颈。")]),a._v(" "),e("li",[e("code",[a._v("size-plugin")]),a._v("：监控资源体积变化，尽早发现问题。")]),a._v(" "),e("li",[e("code",[a._v("HotModuleReplacementPlugin")]),a._v("：模块热替换。")])]),a._v(" "),e("h2",{attrs:{id:"构建流程-🌟"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#构建流程-🌟"}},[a._v("#")]),a._v(" 构建流程 🌟")]),a._v(" "),e("p",[a._v("Webpack 的运行流程是一个串行的过程，从启动到结束会依次执行以下流程：")]),a._v(" "),e("p",[e("strong",[a._v("1. 初始化参数")]),a._v("：从配置文件和 Shell 语句中读取与合并参数，得出最终的参数。")]),a._v(" "),e("p",[e("strong",[a._v("2. 开始编译")]),a._v("：用上一步得到的参数初始化 Compiler 对象，加载所有配置的插件，执行对象的 run 方法开始执行编译。")]),a._v(" "),e("p",[e("strong",[a._v("3. 确定入口")]),a._v("：根据配置中的 entry 字段找出所有的入口文件。")]),a._v(" "),e("p",[e("strong",[a._v("4. 编译模块")]),a._v("：从入口文件里配置的 Module 开始（每找到一个 Module， 就会根据配置的 Loader 去找出对应的转换规则）找出该 Module 依赖的模块，然后递归解析 Entry 依赖的所有 Module。确保所有入口依赖的文件都经过了本步骤的处理。")]),a._v(" "),e("p",[e("strong",[a._v("5. 完成模块编译")]),a._v("：在经过第 4 步使用 Loader 翻译完所有模块后，得到了每个模块被翻译后的最终内容以及它们之间的依赖关系。")]),a._v(" "),e("p",[e("strong",[a._v("6. 输出资源")]),a._v("：根据入口和模块之间的依赖关系，这些模块会以 Entry 为单位进行分组，一个 Entry 和其所有依赖的 Module 被分到一个组也就是一个 Chunk。最后 Webpack 会把所有 Chunk 转换成文件输出，这步是可以修改输出内容的最后机会。")]),a._v(" "),e("p",[e("strong",[a._v("7. 输出完成")]),a._v("：在确定好输出内容后，根据配置确定输出的路径和文件名，把文件内容写入到文件系统。")]),a._v(" "),e("p",[a._v("在整个构建流程中，Webpack 会在特定的时间点广播出特定的事件，插件在监听到感兴趣的事件后会执行它定义的逻辑，并且可以调用 Webpack 的 API 改变 Webpack 的运行结果。")]),a._v(" "),e("p",[a._v("说简单点就是：👇")]),a._v(" "),e("ul",[e("li",[e("strong",[a._v("初始化")]),a._v("：启动构建，读取与合并配置参数，加载 Plugin，实例化 Compiler。")]),a._v(" "),e("li",[e("strong",[a._v("编译")]),a._v("：从 Entry 出发，针对每个 Module 串行调用对应的 Loader 去翻译文件的内容，再找到该 Module 依赖的 Module，递归地进行编译处理。")]),a._v(" "),e("li",[e("strong",[a._v("输出")]),a._v("：将编译后的 Module 组合成 Chunk，将 Chunk 转换成文件，输出到文件系统中。")])]),a._v(" "),e("blockquote",[e("p",[a._v("拓展阅读")]),a._v(" "),e("p",[e("a",{attrs:{href:"https://fed.taobao.org/blog/2016/09/10/webpack-flow/",target:"_blank",rel:"noopener noreferrer"}},[a._v("细说 webpack 之流程篇"),e("OutboundLink")],1)]),a._v(" "),e("p",[e("a",{attrs:{href:"https://juejin.im/post/6844904046294204429",target:"_blank",rel:"noopener noreferrer"}},[a._v("从源码窥探Webpack4.x原理"),e("OutboundLink")],1)])]),a._v(" "),e("h2",{attrs:{id:"热更新原理-🌟🌟🌟"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#热更新原理-🌟🌟🌟"}},[a._v("#")]),a._v(" 热更新原理 🌟🌟🌟")]),a._v(" "),e("p",[e("code",[a._v("Webpack")]),a._v(" 的热更新又称热替换（"),e("code",[a._v("Hot Module Replacement")]),a._v("），缩写为 "),e("code",[a._v("HMR")]),a._v("。 这个机制可以做到不用刷新浏览器而将新变更的模块替换掉旧的模块。")]),a._v(" "),e("p",[e("strong",[a._v("HMR 的核心就是客户端从服务端拉去更新后的文件，准确的说是 chunk diff (chunk 需要更新的部分)，实际上 "),e("a",{attrs:{href:"https://lvzhenbang.github.io/webpack-book/zh/developing/02_webpack_dev_server.html#webpack-dev-server%EF%BC%88wds%EF%BC%89",target:"_blank",rel:"noopener noreferrer"}},[a._v("WDS"),e("OutboundLink")],1),a._v(" 与浏览器之间维护了一个 "),e("code",[a._v("Websocket")]),a._v("，当本地资源发生变化时，WDS 会向浏览器推送更新，并带上构建时的 hash，让客户端与上一次资源进行对比。客户端对比出差异后会向 WDS 发起 "),e("code",[a._v("Ajax")]),a._v(" 请求来获取更改内容(文件列表、hash)，这样客户端就可以再借助这些信息继续向 WDS 发起 "),e("code",[a._v("jsonp")]),a._v(" 请求获取该chunk的增量更新。")])]),a._v(" "),e("p",[a._v("后续的部分(拿到增量更新之后如何处理？哪些状态该保留？哪些又需要更新？)由 "),e("code",[a._v("HotModulePlugin")]),a._v(" 来完成，提供了相关 API 以供开发者针对自身场景进行处理，像"),e("code",[a._v("react-hot-loader")]),a._v(" 和 "),e("code",[a._v("vue-loader")]),a._v(" 都是借助这些 API 实现 HMR。")]),a._v(" "),e("h3",{attrs:{id:"文件监听原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#文件监听原理"}},[a._v("#")]),a._v(" 文件监听原理")]),a._v(" "),e("p",[a._v("在发现源码发生变化时，自动重新构建出新的输出文件。")]),a._v(" "),e("p",[a._v("Webpack开启监听模式，有两种方式：")]),a._v(" "),e("ul",[e("li",[a._v("启动 webpack 命令时，带上 --watch 参数")]),a._v(" "),e("li",[a._v("在配置 webpack.config.js 中设置 watch:true")])]),a._v(" "),e("p",[a._v("缺点：每次需要手动刷新浏览器")]),a._v(" "),e("p",[a._v("原理：轮询判断文件的最后编辑时间是否变化，如果某个文件发生了变化，并不会立刻告诉监听者，而是先缓存起来，等 "),e("code",[a._v("aggregateTimeout")]),a._v(" 后再执行。")]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[a._v("module"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("export "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("   \n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 默认false,也就是不开启    ")]),a._v("\n  watch"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("    \n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 只有开启监听模式时，watchOptions才有意义    ")]),a._v("\n  watchOptions"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("        \n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 默认为空，不监听的文件或者文件夹，支持正则匹配")]),a._v("\n    ignored"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[a._v("/node_modules/")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("        \n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 监听到变化发生后会等300ms再去执行，默认300ms")]),a._v("\n    aggregateTimeout"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("300")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 判断文件是否发生变化是通过不停询问系统指定文件有没有变化实现的，默认每秒问1000次")]),a._v("\n    poll"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1000")]),a._v("\n\t"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),e("h2",{attrs:{id:"优化前端性能"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#优化前端性能"}},[a._v("#")]),a._v(" 优化前端性能")]),a._v(" "),e("h3",{attrs:{id:"source-map是什么？生产环境怎么用？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#source-map是什么？生产环境怎么用？"}},[a._v("#")]),a._v(" source map是什么？生产环境怎么用？")]),a._v(" "),e("p",[a._v("**"),e("code",[a._v("source map")]),a._v(" 就是将编译、打包、压缩后的代码映射回源代码的过程。**打包压缩后的代码不具备良好的可读性，想要调试源码就需要 soucre map。")]),a._v(" "),e("p",[a._v("map文件只要不打开开发者工具，浏览器是不会加载的。")]),a._v(" "),e("p",[a._v("线上环境一般有三种处理方案：")]),a._v(" "),e("ul",[e("li",[e("code",[a._v("hidden-source-map")]),a._v("：借助第三方错误监控平台 Sentry 使用")]),a._v(" "),e("li",[e("code",[a._v("nosources-source-map")]),a._v("：只会显示具体行数以及查看源代码的错误栈。安全性比 sourcemap 高")]),a._v(" "),e("li",[e("code",[a._v("sourcemap")]),a._v("：通过 nginx 设置将 .map 文件只对白名单开放(公司内网)")])]),a._v(" "),e("p",[a._v("注意：避免在生产中使用 "),e("code",[a._v("inline-")]),a._v(" 和 "),e("code",[a._v("eval-")]),a._v("，因为它们会增加 bundle 体积大小，并降低整体性能。")]),a._v(" "),e("h3",{attrs:{id:"如何对bundle体积进行监控和分析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何对bundle体积进行监控和分析"}},[a._v("#")]),a._v(" 如何对bundle体积进行监控和分析?")]),a._v(" "),e("p",[e("code",[a._v("VSCode")]),a._v(" 中有一个插件 "),e("code",[a._v("Import Cost")]),a._v(" 可以帮助我们对引入模块的大小进行实时监测，还可以使用 "),e("code",[a._v("webpack-bundle-analyzer")]),a._v(" 生成 "),e("code",[a._v("bundle")]),a._v(" 的模块组成图，显示所占体积。")]),a._v(" "),e("p",[e("code",[a._v("bundlesize")]),a._v(" 工具包可以进行自动化资源体积监控。")]),a._v(" "),e("h2",{attrs:{id:"提高打包速度"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#提高打包速度"}},[a._v("#")]),a._v(" 提高打包速度")]),a._v(" "),e("h3",{attrs:{id:"模块打包原理-🌟"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#模块打包原理-🌟"}},[a._v("#")]),a._v(" 模块打包原理 🌟")]),a._v(" "),e("p",[a._v("Webpack 实际上为每个模块创造了一个可以导出和导入的环境，本质上并没有修改代码的执行逻辑，代码执行顺序与模块加载顺序也完全一致。")]),a._v(" "),e("h2",{attrs:{id:"提高构建速度-🌟🌟🌟"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#提高构建速度-🌟🌟🌟"}},[a._v("#")]),a._v(" 提高构建速度 🌟🌟🌟")]),a._v(" "),e("p",[a._v("这个问题就像能不能说一说**「从URL输入到页面显示发生了什么」**一样，可以说的点很多。")]),a._v(" "),e("ul",[e("li",[a._v("使用"),e("code",[a._v("高版本")]),a._v("的 Webpack 和 Node.js")]),a._v(" "),e("li",[e("code",[a._v("多进程/多实例构建")]),a._v("：HappyPack(停止维护)、thread-loader")]),a._v(" "),e("li",[e("code",[a._v("压缩代码")]),a._v(" "),e("ul",[e("li",[a._v("多进程并行压缩\n"),e("ul",[e("li",[a._v("webpack-paralle-uglify-plugin")]),a._v(" "),e("li",[a._v("uglifyjs-webpack-plugin 开启 parallel 参数 (不支持ES6)")]),a._v(" "),e("li",[a._v("terser-webpack-plugin 开启 parallel 参数")])])]),a._v(" "),e("li",[a._v("通过 mini-css-extract-plugin 提取 Chunk 中的 CSS 代码到单独文件，通过 css-loader 的 minimize 选项开启 cssnano 压缩 CSS。")])])]),a._v(" "),e("li",[e("code",[a._v("图片压缩")]),a._v(" "),e("ul",[e("li",[a._v("使用基于 Node 库的 imagemin (很多定制选项、可以处理多种图片格式)")]),a._v(" "),e("li",[a._v("配置 image-webpack-loader")])])]),a._v(" "),e("li",[e("code",[a._v("缩小打包作用域")]),a._v("：\n"),e("ul",[e("li",[a._v("exclude/include (确定 loader 规则范围)")]),a._v(" "),e("li",[a._v("resolve.modules 指明第三方模块的绝对路径 (减少不必要的查找)")]),a._v(" "),e("li",[a._v("resolve.mainFields 只采用 main 字段作为入口文件描述字段 (减少搜索步骤，需要考虑到所有运行时依赖的第三方模块的入口文件描述字段)")]),a._v(" "),e("li",[a._v("resolve.extensions 尽可能减少后缀尝试的可能性")]),a._v(" "),e("li",[a._v("noParse 对完全不需要解析的库进行忽略 (不去解析但仍会打包到 bundle 中，注意被忽略掉的文件里不应该包含 import、require、define 等模块化语句)")]),a._v(" "),e("li",[a._v("IgnorePlugin (完全排除模块)")]),a._v(" "),e("li",[a._v("合理使用alias")])])]),a._v(" "),e("li",[e("code",[a._v("提取页面公共资源")]),a._v("：\n"),e("ul",[e("li",[a._v("基础包分离：\n"),e("ul",[e("li",[a._v("使用 html-webpack-externals-plugin，将基础包通过 CDN 引入，不打入 bundle 中")]),a._v(" "),e("li",[a._v("使用 SplitChunksPlugin 进行(公共脚本、基础包、页面公共文件)分离(Webpack4内置) ，替代了 CommonsChunkPlugin 插件")])])])])]),a._v(" "),e("li",[e("code",[a._v("DLL")]),a._v("：\n"),e("ul",[e("li",[a._v("使用 DllPlugin 进行分包，使用 DllReferencePlugin(索引链接) 对 manifest.json 引用，让一些基本不会改动的代码先打包成静态资源，避免反复编译浪费时间。")]),a._v(" "),e("li",[a._v("HashedModuleIdsPlugin 可以解决模块数字 id 问题")])])]),a._v(" "),e("li",[e("code",[a._v("充分利用缓存提升二次构建速度")]),a._v("：\n"),e("ul",[e("li",[a._v("babel-loader 开启缓存")]),a._v(" "),e("li",[a._v("terser-webpack-plugin 开启缓存")]),a._v(" "),e("li",[a._v("使用 cache-loader 或者 hard-source-webpack-plugin")])])]),a._v(" "),e("li",[e("code",[a._v("Tree shaking")]),a._v(" "),e("ul",[e("li",[a._v("打包过程中检测工程中没有引用过的模块并进行标记，在资源压缩时将它们从最终的bundle中去掉(只能对ES6 Modlue生效) 开发中尽可能使用ES6 Module的模块，提高tree shaking效率")]),a._v(" "),e("li",[a._v("禁用 babel-loader 的模块依赖解析，否则 Webpack 接收到的就都是转换过的 CommonJS 形式的模块，无法进行 tree-shaking")]),a._v(" "),e("li",[a._v("使用 PurifyCSS(不在维护) 或者 uncss 去除无用 CSS 代码\n"),e("ul",[e("li",[a._v("purgecss-webpack-plugin 和 mini-css-extract-plugin配合使用(建议)")])])])])]),a._v(" "),e("li",[e("code",[a._v("Scope hoisting")]),a._v(" "),e("ul",[e("li",[a._v("构建后的代码会存在大量闭包，造成体积增大，运行代码时创建的函数作用域变多，内存开销变大。Scope hoisting 将所有模块的代码按照引用顺序放在一个函数作用域里，然后适当的重命名一些变量以防止变量名冲突")]),a._v(" "),e("li",[a._v("必须是ES6的语法，因为有很多第三方库仍采用 CommonJS 语法，为了充分发挥 Scope hoisting 的作用，需要配置 mainFields 对第三方模块优先采用 jsnext:main 中指向的ES6模块化语法")])])]),a._v(" "),e("li",[e("code",[a._v("动态Polyfill")]),a._v(" "),e("ul",[e("li",[a._v("建议采用 polyfill-service 只给用户返回需要的polyfill，社区维护。 (部分国内奇葩浏览器UA可能无法识别，但可以降级返回所需全部polyfill)")])])])]),a._v(" "),e("p",[a._v("更多优化请参考"),e("a",{attrs:{href:"https://www.webpackjs.com/guides/build-performance/",target:"_blank",rel:"noopener noreferrer"}},[a._v("官网-构建性能"),e("OutboundLink")],1)]),a._v(" "),e("h2",{attrs:{id:"文件指纹"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#文件指纹"}},[a._v("#")]),a._v(" 文件指纹")]),a._v(" "),e("p",[a._v("文件指纹是打包后输出的文件名的后缀。")]),a._v(" "),e("ul",[e("li",[e("code",[a._v("Hash")]),a._v("：和整个项目的构建相关，只要项目文件有修改，整个项目构建的 hash 值就会更改")]),a._v(" "),e("li",[e("code",[a._v("Chunkhash")]),a._v("：和 Webpack 打包的 chunk 有关，不同的 entry 会生出不同的 chunkhash")]),a._v(" "),e("li",[e("code",[a._v("Contenthash")]),a._v("：根据文件内容来定义 hash，文件内容不变，则 contenthash 不变")])]),a._v(" "),e("h3",{attrs:{id:"js-的文件指纹设置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#js-的文件指纹设置"}},[a._v("#")]),a._v(" JS 的文件指纹设置")]),a._v(" "),e("p",[a._v("设置 output 的 filename，用 chunkhash。")]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[a._v("module"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("exports "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  entry"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    app"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'./scr/app.js'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    search"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'./src/search.js'")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  output"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    filename"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'[name][chunkhash:8].js'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    path"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("__dirname "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'/dist'")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),e("h3",{attrs:{id:"css-的文件指纹设置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#css-的文件指纹设置"}},[a._v("#")]),a._v(" CSS 的文件指纹设置")]),a._v(" "),e("p",[a._v("设置 MiniCssExtractPlugin 的 filename，使用 contenthash。")]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[a._v("module"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("exports "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  entry"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    app"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'./scr/app.js'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    search"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'./src/search.js'")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  output"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    filename"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'[name][chunkhash:8].js'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    path"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("__dirname "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'/dist'")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  plugins"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("MiniCssExtractPlugin")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n      filename"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[a._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("[name][contenthash:8].css")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[a._v("`")])]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),e("h3",{attrs:{id:"图片的文件指纹设置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#图片的文件指纹设置"}},[a._v("#")]),a._v(" 图片的文件指纹设置")]),a._v(" "),e("p",[a._v("设置file-loader的name，使用hash。")]),a._v(" "),e("p",[a._v("占位符名称及含义")]),a._v(" "),e("ul",[e("li",[a._v("ext     资源后缀名")]),a._v(" "),e("li",[a._v("name    文件名称")]),a._v(" "),e("li",[a._v("path    文件的相对路径")]),a._v(" "),e("li",[a._v("folder  文件所在的文件夹")]),a._v(" "),e("li",[a._v("contenthash   文件的内容hash，默认是md5生成")]),a._v(" "),e("li",[a._v("hash         文件内容的hash，默认是md5生成")]),a._v(" "),e("li",[a._v("emoji        一个随机的指代文件内容的emoj")])]),a._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" path "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'path'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nmodule"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("exports "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  entry"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'./src/index.js'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  output"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    filename"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'bundle.js'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    path"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("path"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("resolve")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("__dirname"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'dist'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  module"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    rules"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n      test"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),e("span",{pre:!0,attrs:{class:"token regex"}},[a._v("/\\.(png|svg|jpg|gif)$/")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n      use"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        loader"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'file-loader'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n        options"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n          name"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'img/[name][hash:8].[ext]'")]),a._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);