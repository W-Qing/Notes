(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{252:function(t,a,s){"use strict";s.r(a);var e=s(0),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"前端安全"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前端安全"}},[t._v("#")]),t._v(" 前端安全")]),t._v(" "),s("h2",{attrs:{id:"可能引起前端安全的的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#可能引起前端安全的的问题"}},[t._v("#")]),t._v(" 可能引起前端安全的的问题?")]),t._v(" "),s("ol",[s("li",[s("p",[s("strong",[t._v("跨站脚本攻击(Cross-Site Scripting, XSS)")])]),t._v(" "),s("blockquote",[s("p",[t._v("一种"),s("a",{attrs:{href:"%5Bhttps://www.wikiwand.com/zh-hans/%E4%BB%A3%E7%A2%BC%E6%B3%A8%E5%85%A5%5D(https://www.wikiwand.com/zh-hans/%E4%BB%A3%E7%A2%BC%E6%B3%A8%E5%85%A5)"}},[t._v("代码注入")]),t._v("方式, 为了与 CSS 区分所以被称作 XSS。")]),t._v(" "),s("p",[t._v("早期常见于网络论坛, 起因是网站没有对用户的输入进行严格的限制, 使得攻击者可以将脚本上传到帖子让其他人浏览到有恶意脚本的页面，其注入方式很简单包括但不限于 JavaScript / VBScript / CSS / Flash 等。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("跨站点请求伪造(Cross-Site Request Forgery, CSRF/XSRF)")])]),t._v(" "),s("blockquote",[s("p",[t._v("是一种挟制用户在当前已登录的 Web 应用程序上执行非本意的操作的攻击方法。指攻击者通过设置好的陷阱，强制对已完成认证的用户进行非预期的个人信息或设定信息等某些状态更新，属于被动攻击。简单点说，CSRF 就是利用用户的登录态发起恶意请求。跟 XSS 相比，XSS 利用的是用户对指定网站的信任，CSRF 利用的是网站对用户网页浏览器的信任。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("iframe的滥用")])]),t._v(" "),s("blockquote",[s("p",[t._v("iframe 中的内容是由第三方来提供的，默认情况下他们不受我们的控制，他们可以在iframe中运行JavaScirpt脚本、Flash插件、弹出对话框等等，这可能会破坏前端用户体验")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("恶意第三方库")])]),t._v(" "),s("blockquote",[s("p",[t._v("一旦第三方库被植入恶意代码很容易引起安全问题,比如event-stream的恶意代码事件,2018年11月21日，名为 FallingSnow的用户在知名JavaScript应用库event-stream在github Issuse中发布了针对植入的恶意代码的疑问，表示event-stream中存在用于窃取用户数字钱包的恶意代码")])])])]),t._v(" "),s("h2",{attrs:{id:"xss"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#xss"}},[t._v("#")]),t._v(" XSS")]),t._v(" "),s("p",[t._v("根据攻击的存储区（恶意代码存放的位置）与插入点（由谁取得恶意代码，并插入到网页上）不同，XSS 攻击可分为"),s("strong",[t._v("存储型、反射型")]),t._v("和 "),s("strong",[t._v("DOM 型")]),t._v("三种。")]),t._v(" "),s("h3",{attrs:{id:"存储型-xss"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#存储型-xss"}},[t._v("#")]),t._v(" 存储型 XSS")]),t._v(" "),s("p",[t._v("顾名思义，攻击者将恶意脚本代码提交到目标网站的数据库中存储起来了，然后用户在客户端打开网站时，"),s("strong",[t._v("网站服务端")]),t._v("将恶意代码"),s("strong",[t._v("从数据库取出")]),t._v("并执行了这些脚本，从而达到攻击的效果。")]),t._v(" "),s("ol",[s("li",[t._v("攻击者将恶意代码提交到目标网站的数据库中。")]),t._v(" "),s("li",[t._v("用户打开目标网站时，"),s("strong",[t._v("网站服务端")]),t._v("将恶意代码"),s("strong",[t._v("从数据库取出")]),t._v("，拼接在 HTML 中返回给浏览器。")]),t._v(" "),s("li",[t._v("用户浏览器接收到响应后解析执行，混在其中的恶意代码也被执行。")]),t._v(" "),s("li",[t._v("恶意代码窃取用户数据并发送到攻击者的网站，或者冒充用户的行为，调用目标网站接口执行攻击者指定的操作。")])]),t._v(" "),s("p",[t._v("这种攻击常见于带有用户保存数据的网站功能，如论坛发帖、商品评论、用户私信等。")]),t._v(" "),s("h3",{attrs:{id:"反射型-xss"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#反射型-xss"}},[t._v("#")]),t._v(" 反射型 XSS")]),t._v(" "),s("ol",[s("li",[t._v("攻击者构造出特殊的 URL，其中包含恶意代码。")]),t._v(" "),s("li",[t._v("用户打开带有恶意代码的 URL 时，"),s("strong",[t._v("网站服务端")]),t._v("将恶意代码"),s("strong",[t._v("从 URL 中取出")]),t._v("，拼接在 HTML 中返回给浏览器。")]),t._v(" "),s("li",[t._v("用户浏览器接收到响应后解析执行，混在其中的恶意代码也被执行。")]),t._v(" "),s("li",[t._v("恶意代码窃取用户数据并发送到攻击者的网站，或者冒充用户的行为，调用目标网站接口执行攻击者指定的操作。")])]),t._v(" "),s("p",[t._v("反射型 XSS 漏洞常见于通过 URL 传递参数的功能，如网站搜索、跳转等。")]),t._v(" "),s("p",[t._v("由于需要用户主动打开恶意的 URL 才能生效，攻击者往往会结合多种手段诱导用户点击。")]),t._v(" "),s("p",[t._v("POST 的内容也可以触发反射型 XSS，只不过其触发条件比较苛刻（需要构造表单提交页面，并引导用户点击），所以非常少见。")]),t._v(" "),s("p",[s("strong",[t._v("反射型 XSS 跟存储型 XSS 的区别是：")])]),t._v(" "),s("p",[s("strong",[t._v("存储型 XSS 的恶意代码存在数据库里，反射型 XSS 的恶意代码存在 URL 里。")])]),t._v(" "),s("h3",{attrs:{id:"dom-型-xss"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dom-型-xss"}},[t._v("#")]),t._v(" DOM 型 XSS")]),t._v(" "),s("ol",[s("li",[t._v("攻击者构造出特殊的 URL，其中包含恶意代码。")]),t._v(" "),s("li",[t._v("用户打开带有恶意代码的 URL。")]),t._v(" "),s("li",[t._v("用户浏览器接收到响应后解析执行，"),s("strong",[t._v("前端 JavaScript 从 URL 中取出")]),t._v("恶意代码并执行。")]),t._v(" "),s("li",[t._v("恶意代码窃取用户数据并发送到攻击者的网站，或者冒充用户的行为，调用目标网站接口执行攻击者指定的操作。")])]),t._v(" "),s("p",[s("strong",[t._v("DOM 型 XSS 跟前两种 XSS 的区别：")])]),t._v(" "),s("p",[s("strong",[t._v("DOM 型 XSS 攻击中，取出和执行恶意代码由浏览器端完成，属于前端 JavaScript 自身的安全漏洞，而其他两种 XSS 都属于服务端的安全漏洞。")])]),t._v(" "),s("h3",{attrs:{id:"如何防范-xss？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何防范-xss？"}},[t._v("#")]),t._v(" 如何防范 XSS？")]),t._v(" "),s("p",[t._v("XSS 攻击有两大要素：1. 攻击者提交恶意代码，2. 浏览器执行恶意代码。")]),t._v(" "),s("h4",{attrs:{id:"输入过滤"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#输入过滤"}},[t._v("#")]),t._v(" 输入过滤")]),t._v(" "),s("p",[t._v("针对第一个要素：我们很容易想到是否能够在将用户的输入提交到后端时，过滤掉用户输入的恶意代码呢？🤔")]),t._v(" "),s("p",[t._v("答案是不可行。一旦攻击者绕过前端过滤，直接构造请求，仍然还是可以提交恶意代码。🌚")]),t._v(" "),s("p",[t._v("那么，换一个过滤时机：后端在写入数据库前，对输入进行过滤，然后把“安全的”内容，返回给前端。这样是否可行呢？🤔")]),t._v(" "),s("p",[t._v("也还是不行，因为：在提交阶段，我们并不确定内容要输出到哪里。🌚")]),t._v(" "),s("p",[t._v("这里的“并不确定内容要输出到哪里”有两层含义，比如我们将一个正常用户输入的 "),s("code",[t._v("5 < 7")]),t._v("，在写入数据库前给转义变成了"),s("code",[t._v("5 &lt; 7")]),t._v("。")]),t._v(" "),s("ol",[s("li",[t._v("用户的输入内容可能同时提供给前端和客户端，而一旦经过了 "),s("code",[t._v("escapeHTML()")]),t._v("，客户端显示的内容就变成了乱码( "),s("code",[t._v("5 &lt; 7")]),t._v(" )。")]),t._v(" "),s("li",[t._v("在前端中，不同的位置所需的编码也不同。")])]),t._v(" "),s("ul",[s("li",[t._v("当 "),s("code",[t._v("5 &lt; 7")]),t._v("作为 HTML 拼接页面时，可以正常显示：")])]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("title")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("comment"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("5 "),s("span",{pre:!0,attrs:{class:"token entity named-entity",title:"<"}},[t._v("&lt;")]),t._v(" 7"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("ul",[s("li",[t._v("当"),s("code",[t._v("5 &lt; 7")]),t._v(" 通过 Ajax 返回，然后赋值给 JavaScript 的变量时，前端得到的字符串就是转义后的字符。这个内容不能直接用于 Vue 等模板的展示，也不能直接用于内容长度计算。不能用于标题、alert 等。")])]),t._v(" "),s("p",[s("strong",[t._v("所以，输入侧过滤能够在某些情况下解决特定的 XSS 问题，但会引入很大的不确定性和乱码问题。在防范 XSS 攻击时应避免此类方法。")])]),t._v(" "),s("p",[s("strong",[t._v("当然，对于明确的输入类型，例如数字、URL、电话号码、邮件地址等等内容，进行输入过滤还是必要的。")])]),t._v(" "),s("p",[t._v("既然输入过滤并非完全可靠，我们就要"),s("strong",[t._v("通过“防止浏览器执行恶意代码”来防范 XSS")]),t._v("。这部分分为两类：")]),t._v(" "),s("ol",[s("li",[t._v("防止 HTML 中出现注入")]),t._v(" "),s("li",[t._v("防止 JavaScript 执行时，执行恶意代码")])]),t._v(" "),s("h3",{attrs:{id:"预防存储型和反射型-xss-攻击"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#预防存储型和反射型-xss-攻击"}},[t._v("#")]),t._v(" 预防存储型和反射型 XSS 攻击")]),t._v(" "),s("p",[t._v("存储型和反射型 XSS 都是在服务端取出恶意代码后，插入到响应 HTML 里的，攻击者刻意编写的“数据”被内嵌到“代码”中，被浏览器所执行。")]),t._v(" "),s("p",[t._v("预防这两种漏洞，有两种常见做法：")]),t._v(" "),s("ul",[s("li",[t._v("改成纯前端渲染，把代码和数据分隔开。")]),t._v(" "),s("li",[t._v("对 HTML 做充分转义。")])]),t._v(" "),s("h4",{attrs:{id:"纯前端渲染"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#纯前端渲染"}},[t._v("#")]),t._v(" 纯前端渲染")]),t._v(" "),s("ol",[s("li",[t._v("浏览器先加载一个静态 HTML，此 HTML 中不包含任何跟业务相关的数据。")]),t._v(" "),s("li",[t._v("然后浏览器执行 HTML 中的 JavaScript。")]),t._v(" "),s("li",[t._v("JavaScript 通过 Ajax 加载业务数据，调用 DOM API 更新到页面上。")])]),t._v(" "),s("p",[t._v("在纯前端渲染中，我们会明确的告诉浏览器：")]),t._v(" "),s("p",[t._v("下面要设置的内容是文本（"),s("code",[t._v(".innerText")]),t._v("），还是属性（"),s("code",[t._v(".setAttribute")]),t._v("），还是样式（"),s("code",[t._v(".style")]),t._v("）等等。这样浏览器就不会被轻易的被欺骗，执行预期外的代码了。")]),t._v(" "),s("p",[t._v("但纯前端渲染还需注意避免 DOM 型 XSS 漏洞（例如 "),s("code",[t._v("onload")]),t._v(" 事件和 "),s("code",[t._v("href")]),t._v(" 中的 "),s("code",[t._v("javascript:xxx")]),t._v(" 等，请参考下文”预防 DOM 型 XSS 攻击“部分）。\n在很多内部、管理系统中，采用纯前端渲染是非常合适的。但对于性能要求高，或有 SEO 需求的页面，我们仍然要面对拼接 HTML 的问题。")]),t._v(" "),s("h4",{attrs:{id:"转义-html"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#转义-html"}},[t._v("#")]),t._v(" 转义 HTML")]),t._v(" "),s("p",[t._v("如果拼接 HTML 是必要的，就需要采用合适的转义库，对 HTML 模板各处插入点进行充分的转义。")]),t._v(" "),s("p",[t._v("常用的模板引擎，如 doT.js、ejs、FreeMarker 等，对于 HTML 转义通常只有一个规则，就是把 "),s("code",[t._v("& < > \" ' /")]),t._v(" 这几个字符转义掉，确实能起到一定的 XSS 防护作用，但并不完善，只能对 HTML 标签文字内容以及 HTML 属性值有效，而对 CSS 内联样式、内联 JavaScript、内联 JSON、跳转链接等都没有效果。")]),t._v(" "),s("blockquote",[s("p",[t._v("过滤 Html 标签能否防止 XSS? 请列举不能的情况?")])]),t._v(" "),s("p",[t._v("用户除了上传")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token script"}},[s("span",{pre:!0,attrs:{class:"token language-javascript"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xss'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("还可以使用图片 url 等方式来上传脚本进行攻击")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("table")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("background")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("javascript:alert(/xss/)"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("table")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("img")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("javascript:alert("),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("xss"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v(")"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("还可以使用各种方式来回避检查, 例如空格, 回车, Tab")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("img")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("javas cript:\nalert("),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("xss"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v(")"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("还可以通过各种编码转换 (URL 编码, Unicode 编码, HTML 编码, ESCAPE 等) 来绕过检查")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[t._v("<img%20src=%22javascript:alert('xss');%22>\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("img")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("javascrip&#116&#58alert(/xss/)"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("另外，对于显示富文本来说，也不能通过上面的办法来转义所有字符，因为这样会把需要的格式也过滤掉。这种情况通常采用白名单过滤的办法，当然也可以通过黑名单过滤，但是考虑到需要过滤的标签和标签属性实在太多，更加推荐使用白名单的方式。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" xss "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xss'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" html "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("xss")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'<h1 id="title">XSS Demo</h1><script>alert("xss");<\/script>\'')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// -> <h1>XSS Demo</h1>&lt;script&gt;alert("xss");&lt;/script&gt;')]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("以上示例使用了 "),s("code",[t._v("js-xss")]),t._v(" 来实现，可以看到在输出中保留了 "),s("code",[t._v("h1")]),t._v(" 标签且过滤了 "),s("code",[t._v("script")]),t._v(" 标签。")])]),t._v(" "),s("p",[t._v("所以，要完善 XSS 防护措施，我们要使用更完善更细致的转义策略。\n例如 Java 工程里，常用的转义库为 "),s("code",[t._v("org.owasp.encoder")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"预防-dom-型-xss-攻击"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#预防-dom-型-xss-攻击"}},[t._v("#")]),t._v(" 预防 DOM 型 XSS 攻击")]),t._v(" "),s("p",[t._v("DOM 型 XSS 攻击，实际上就是网站前端 JavaScript 代码本身不够严谨，把不可信的数据当作代码执行了。")]),t._v(" "),s("ul",[s("li",[t._v("在使用 "),s("code",[t._v(".innerHTML")]),t._v("、"),s("code",[t._v(".outerHTML")]),t._v("、"),s("code",[t._v("document.write()")]),t._v(" 时要特别小心，不要把不可信的数据作为 HTML 插到页面上，而应尽量使用 "),s("code",[t._v(".textContent")]),t._v("、"),s("code",[t._v(".setAttribute()")]),t._v(" 等。")]),t._v(" "),s("li",[t._v("如果用 Vue/React 技术栈，并且不使用 "),s("code",[t._v("v-html")]),t._v("/"),s("code",[t._v("dangerouslySetInnerHTML")]),t._v(" 功能，就在前端 render 阶段避免 "),s("code",[t._v("innerHTML")]),t._v("、"),s("code",[t._v("outerHTML")]),t._v(" 的 XSS 隐患。")]),t._v(" "),s("li",[t._v("DOM 中的内联事件监听器，如 "),s("code",[t._v("location")]),t._v("、"),s("code",[t._v("onclick")]),t._v("、"),s("code",[t._v("onerror")]),t._v("、"),s("code",[t._v("onload")]),t._v("、"),s("code",[t._v("onmouseover")]),t._v(" 等，`` 标签的 "),s("code",[t._v("href")]),t._v(" 属性，JavaScript 的 "),s("code",[t._v("eval()")]),t._v("、"),s("code",[t._v("setTimeout()")]),t._v("、"),s("code",[t._v("setInterval()")]),t._v(" 等，都能把字符串作为代码运行。如果不可信的数据拼接到字符串中传递给这些 API，很容易产生安全隐患。如果项目中有用到这些的话，一定要避免在字符串中拼接不可信数据。")])]),t._v(" "),s("h3",{attrs:{id:"其他-xss-防范措施"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其他-xss-防范措施"}},[t._v("#")]),t._v(" 其他 XSS 防范措施")]),t._v(" "),s("p",[t._v("虽然在渲染页面和执行 JavaScript 时，通过谨慎的转义可以防止 XSS 的发生，但完全依靠开发的谨慎仍然是不够的。以下介绍一些通用的方案，可以降低 XSS 带来的风险和后果。")]),t._v(" "),s("h4",{attrs:{id:"内容安全策略-content-security-policy"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内容安全策略-content-security-policy"}},[t._v("#")]),t._v(" 内容安全策略 Content Security Policy")]),t._v(" "),s("blockquote",[s("p",[t._v("内容安全策略 ("),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Glossary/CSP",target:"_blank",rel:"noopener noreferrer"}},[t._v("CSP"),s("OutboundLink")],1),t._v(") 是一个额外的安全层，用于检测并削弱某些特定类型的攻击，包括跨站脚本 ("),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Glossary/XSS",target:"_blank",rel:"noopener noreferrer"}},[t._v("XSS"),s("OutboundLink")],1),t._v(") 和数据注入攻击等。无论是数据盗取、网站内容污染还是散发恶意软件，这些攻击都是主要的手段。")])]),t._v(" "),s("p",[t._v("严格的 CSP 在 XSS 的防范中可以起到以下的作用：")]),t._v(" "),s("ul",[s("li",[t._v("禁止加载外域代码，防止复杂的攻击逻辑")]),t._v(" "),s("li",[t._v("禁止外域提交，网站被攻击后，用户的数据不会泄露到外域")]),t._v(" "),s("li",[t._v("禁止内联脚本执行（规则较严格，目前发现 GitHub 使用）")]),t._v(" "),s("li",[t._v("禁止未授权的脚本执行（新特性，Google Map 移动版在使用）")]),t._v(" "),s("li",[t._v("合理使用上报可以及时发现 XSS，利于尽快修复问题")])]),t._v(" "),s("p",[t._v("我们可以通过 CSP 来尽量减少 XSS 攻击。CSP 本质上也是建立白名单，规定了浏览器只能够执行特定来源的代码。")]),t._v(" "),s("p",[t._v("通常可以通过 HTTP Header 中的 "),s("code",[t._v("Content-Security-Policy")]),t._v(" 来开启 CSP")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("只允许加载本站资源")]),t._v(" "),s("div",{staticClass:"language-http extra-class"},[s("pre",{pre:!0,attrs:{class:"language-http"}},[s("code",[s("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Content-Security-Policy:")]),t._v(" default-src ‘self’\n")])])])]),t._v(" "),s("li",[s("p",[t._v("只允许加载 HTTPS 协议图片")]),t._v(" "),s("div",{staticClass:"language-http extra-class"},[s("pre",{pre:!0,attrs:{class:"language-http"}},[s("code",[s("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Content-Security-Policy:")]),t._v(" img-src https://*\n")])])])]),t._v(" "),s("li",[s("p",[t._v("允许加载任何来源框架")]),t._v(" "),s("div",{staticClass:"language-http extra-class"},[s("pre",{pre:!0,attrs:{class:"language-http"}},[s("code",[s("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Content-Security-Policy:")]),t._v(" child-src 'none'\n")])])])])]),t._v(" "),s("p",[t._v("更多属性可以查看 "),s("a",{attrs:{href:"https://content-security-policy.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里"),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"输入内容长度控制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#输入内容长度控制"}},[t._v("#")]),t._v(" 输入内容长度控制")]),t._v(" "),s("p",[t._v("对于不受信任的输入，都应该限定一个合理的长度。虽然无法完全防止 XSS 发生，但可以增加 XSS 攻击的难度。")]),t._v(" "),s("h3",{attrs:{id:"其他安全措施"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其他安全措施"}},[t._v("#")]),t._v(" 其他安全措施")]),t._v(" "),s("ul",[s("li",[t._v("HTTP-only Cookie: 禁止 JavaScript 读取某些敏感 Cookie，攻击者完成 XSS 注入后也无法窃取此 Cookie。")]),t._v(" "),s("li",[t._v("验证码：防止脚本冒充用户提交危险操作。")])]),t._v(" "),s("p",[t._v("强烈建议阅读下面两篇前端安全文章:")]),t._v(" "),s("p",[t._v("用户除了上传")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token script"}},[s("span",{pre:!0,attrs:{class:"token language-javascript"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xss'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("还可以使用图片 url 等方式来上传脚本进行攻击")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("table")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("background")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("javascript:alert(/xss/)"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("table")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("img")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("javascript:alert("),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("xss"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v(")"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("还可以使用各种方式来回避检查, 例如空格, 回车, Tab")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("img")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("javas cript:\nalert("),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("xss"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v(")"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("还可以通过各种编码转换 (URL 编码, Unicode 编码, HTML 编码, ESCAPE 等) 来绕过检查")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[t._v("<img%20src=%22javascript:alert('xss');%22>\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("img")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("javascrip&#116&#58alert(/xss/)"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("强烈建议阅读下面两篇前端安全文章:")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://tech.meituan.com/2018/09/27/fe-security.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端安全系列（一）：如何防止XSS攻击？ "),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://tech.meituan.com/2018/10/11/fe-security-csrf.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端安全系列（二）：如何防止CSRF攻击？"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"csrf"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#csrf"}},[t._v("#")]),t._v(" CSRF")]),t._v(" "),s("h4",{attrs:{id:"xsrf-（cross-site-request-forgery）-跨站请求伪造"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#xsrf-（cross-site-request-forgery）-跨站请求伪造"}},[t._v("#")]),t._v(" XSRF （Cross-site request forgery） 跨站请求伪造")]),t._v(" "),s("ul",[s("li",[t._v("登录一个购物网站浏览商品，而该网站的付费购买接口是xxx.com/pay?id=10")]),t._v(" "),s("li",[t._v("然后可能会收到邮件，其中隐藏着对购物网站（已登录）没有任何验证的购买请求"),s("code",[t._v('<img src = "xxx.com/pay?id=10">')])])]),t._v(" "),s("p",[s("strong",[t._v("防范：")])]),t._v(" "),s("ul",[s("li",[t._v("增加验证流程，如指纹、密码、短信验证码")])])])}),[],!1,null,null,null);a.default=r.exports}}]);